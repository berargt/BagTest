# This is a basic workflow to help you get started with Actions

name: arduino-CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This is the name of the job - can be whatever.
  test-matrix:
    # Here we tell GitHub that the jobs must be determined
    # dynamically depending on a matrix configuration.
    strategy:
      matrix:
        # The matrix will produce one job for each configuration
        # parameter of type `arduino-platform`, in this case a
        # total of 1.
        arduino-platform: ["arduino:avr"]
        # This is usually optional but we need to statically define the
        # FQBN of the boards we want to test for each platform. In the
        # future the CLI might automatically detect and download the core
        # needed to compile against a certain FQBN, at that point the
        # following `include` section will be useless.
        include:
          # This works like this: when the platformn is "arduino:avr", the
          # variable `fqbn` is set to "arduino:avr:mega".
          - arduino-platform: "arduino:avr"
            fqbn: "arduino:avr:mega"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@master

    # We use the `arduino/setup-arduino-cli` action to install and
    # configure the Arduino CLI on the system.
    - name: Setup Arduino CLI
      uses: arduino/setup-arduino-cli@v1.0.0

    # We then install the platform
    - name: Install platform
      run: |
        arduino-cli core update-index
        arduino-cli core install ${{ matrix.arduino-platform }}
    
    # Install dependencies
    - name: Install dependencies
      run: |
        ./install-deps.sh
    
    # Finally, we compile the sketch, using the FQBN that was set
    # in the build matrix.
    - name: Compile Sketch
      run: arduino-cli compile --fqbn ${{ matrix.fqbn }} .
